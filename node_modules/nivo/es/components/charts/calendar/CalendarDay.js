/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import React from 'react';
import PropTypes from 'prop-types';
import compose from 'recompose/compose';
import withPropsOnChange from 'recompose/withPropsOnChange';
import pure from 'recompose/pure';
import noop from '../../../lib/noop';
import BasicTooltip from '../../tooltip/BasicTooltip';

var CalendarDay = function CalendarDay(_ref) {
    var x = _ref.x,
        y = _ref.y,
        size = _ref.size,
        color = _ref.color,
        borderWidth = _ref.borderWidth,
        borderColor = _ref.borderColor,
        onClick = _ref.onClick,
        showTooltip = _ref.showTooltip,
        hideTooltip = _ref.hideTooltip;
    return React.createElement('rect', {
        x: x,
        y: y,
        width: size,
        height: size,
        style: {
            fill: color,
            strokeWidth: borderWidth,
            stroke: borderColor
        },
        onClick: onClick,
        onMouseEnter: showTooltip,
        onMouseMove: showTooltip,
        onMouseLeave: hideTooltip
    });
};

CalendarDay.propTypes = {
    onClick: PropTypes.func.isRequired,
    data: PropTypes.object.isRequired,
    x: PropTypes.number.isRequired,
    y: PropTypes.number.isRequired,
    size: PropTypes.number.isRequired,
    color: PropTypes.string.isRequired,
    borderWidth: PropTypes.number.isRequired,
    borderColor: PropTypes.string.isRequired,

    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),
    showTooltip: PropTypes.func.isRequired,
    hideTooltip: PropTypes.func.isRequired,

    theme: PropTypes.shape({
        tooltip: PropTypes.shape({}).isRequired
    }).isRequired
};

var enhance = compose(withPropsOnChange(['data', 'onClick'], function (_ref2) {
    var data = _ref2.data,
        _onClick = _ref2.onClick;
    return {
        onClick: function onClick(event) {
            return _onClick(data, event);
        }
    };
}), withPropsOnChange(['data', 'color', 'showTooltip', 'theme', 'tooltipFormat'], function (_ref3) {
    var data = _ref3.data,
        color = _ref3.color,
        _showTooltip = _ref3.showTooltip,
        theme = _ref3.theme,
        tooltipFormat = _ref3.tooltipFormat;

    if (data.value === undefined) return { showTooltip: noop };

    return {
        showTooltip: function showTooltip(event) {
            return _showTooltip(React.createElement(BasicTooltip, {
                id: '' + data.day,
                value: data.value,
                enableChip: true,
                color: color,
                theme: theme,
                format: tooltipFormat
            }), event);
        }
    };
}), pure);

export default enhance(CalendarDay);