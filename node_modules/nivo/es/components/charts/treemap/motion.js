var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import { spring } from 'react-motion';
import { colorMotionSpring } from '../../../lib/colors';

export var nodeWillEnter = function nodeWillEnter(_ref) {
    var node = _ref.data;
    return _extends({
        x: node.x,
        y: node.y,
        width: node.width,
        height: node.height
    }, colorMotionSpring(node.color));
};

export var nodeWillLeave = function nodeWillLeave(springConfig) {
    return function (_ref2) {
        var node = _ref2.data;
        return _extends({
            x: spring(node.x + node.width / 2, springConfig),
            y: spring(node.y + node.height / 2, springConfig),
            width: spring(0, springConfig),
            height: spring(0, springConfig)
        }, colorMotionSpring(node.color, springConfig));
    };
};