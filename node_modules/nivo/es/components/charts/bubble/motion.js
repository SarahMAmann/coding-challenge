var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import { spring } from 'react-motion';
import { colorMotionSpring } from '../../../lib/colors';

export var nodeWillEnter = function nodeWillEnter(_ref) {
    var data = _ref.data;
    return _extends({
        scale: 0,
        r: 0,
        x: data.x,
        y: data.y
    }, colorMotionSpring(data.color));
};

export var nodeWillLeave = function nodeWillLeave(springConfig) {
    return function (_ref2) {
        var data = _ref2.data;
        return _extends({
            scale: spring(0, springConfig),
            r: spring(0, springConfig),
            x: spring(data.x, springConfig),
            y: spring(data.y, springConfig)
        }, colorMotionSpring(data.color, springConfig));
    };
};