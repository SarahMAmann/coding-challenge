/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import compose from 'recompose/compose';
import defaultProps from 'recompose/defaultProps';
import withState from 'recompose/withState';
import withPropsOnChange from 'recompose/withPropsOnChange';
import pure from 'recompose/pure';
import { getInheritedColorGenerator } from '../../../lib/colors';
import { getLabelGenerator } from '../../../lib/propertiesConverters';
import { withColors, withTheme, withDimensions, withMotion } from '../../../hocs';
import { SankeyDefaultProps } from './props';

export default (function (Component) {
    return compose(defaultProps(SankeyDefaultProps), withState('currentNode', 'setCurrentNode', null), withState('currentLink', 'setCurrentLink', null), withColors(), withColors({
        colorByKey: 'linkColorBy',
        destKey: 'getLinkColor',
        defaultColorBy: 'source.id'
    }), withTheme(), withDimensions(), withMotion(), withPropsOnChange(['nodeBorderColor'], function (_ref) {
        var nodeBorderColor = _ref.nodeBorderColor;
        return {
            getNodeBorderColor: getInheritedColorGenerator(nodeBorderColor)
        };
    }), withPropsOnChange(['labelTextColor'], function (_ref2) {
        var labelTextColor = _ref2.labelTextColor;
        return {
            getLabelTextColor: getInheritedColorGenerator(labelTextColor)
        };
    }), withPropsOnChange(['label', 'labelFormat'], function (_ref3) {
        var label = _ref3.label,
            labelFormat = _ref3.labelFormat;
        return {
            getLabel: getLabelGenerator(label, labelFormat)
        };
    }), pure)(Component);
});