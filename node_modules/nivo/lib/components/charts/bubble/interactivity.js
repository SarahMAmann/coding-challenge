'use strict';

exports.__esModule = true;
exports.getNodeHandlers = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _BasicTooltip = require('../../tooltip/BasicTooltip');

var _BasicTooltip2 = _interopRequireDefault(_BasicTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var getNodeHandlers = exports.getNodeHandlers = function getNodeHandlers(node, _ref) {
    var isInteractive = _ref.isInteractive,
        onClick = _ref.onClick,
        showTooltip = _ref.showTooltip,
        hideTooltip = _ref.hideTooltip,
        isZoomable = _ref.isZoomable,
        zoomToNode = _ref.zoomToNode,
        theme = _ref.theme,
        tooltipFormat = _ref.tooltipFormat;

    if (!isInteractive) return {};

    var handleTooltip = function handleTooltip(e) {
        showTooltip(_react2.default.createElement(_BasicTooltip2.default, {
            id: node.id,
            value: node.value,
            enableChip: true,
            color: node.color,
            theme: theme,
            format: tooltipFormat
        }), e);
    };

    var clickHandler = onClick;
    if (isZoomable) {
        clickHandler = function clickHandler(event) {
            onClick(node, event);
            zoomToNode(node.path);
        };
    }

    return {
        onMouseEnter: handleTooltip,
        onMouseMove: handleTooltip,
        onMouseLeave: hideTooltip,
        onClick: clickHandler
    };
};