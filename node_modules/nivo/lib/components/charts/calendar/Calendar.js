'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CalendarLayout = require('../../../lib/charts/calendar/CalendarLayout');

var _CalendarLayout2 = _interopRequireDefault(_CalendarLayout);

var _props = require('./props');

var _d3TimeFormat = require('d3-time-format');

var _directions = require('../../../constants/directions');

var _CalendarDay = require('./CalendarDay');

var _CalendarDay2 = _interopRequireDefault(_CalendarDay);

var _CalendarMonthPath = require('./CalendarMonthPath');

var _CalendarMonthPath2 = _interopRequireDefault(_CalendarMonthPath);

var _Container = require('../Container');

var _Container2 = _interopRequireDefault(_Container);

var _SvgWrapper = require('../SvgWrapper');

var _SvgWrapper2 = _interopRequireDefault(_SvgWrapper);

var _enhance = require('./enhance');

var _enhance2 = _interopRequireDefault(_enhance);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var monthLegendFormat = (0, _d3TimeFormat.timeFormat)('%b');

var Calendar = function Calendar(_ref) {
    var data = _ref.data,
        from = _ref.from,
        to = _ref.to,
        colorScale = _ref.colorScale,
        margin = _ref.margin,
        width = _ref.width,
        height = _ref.height,
        outerWidth = _ref.outerWidth,
        outerHeight = _ref.outerHeight,
        direction = _ref.direction,
        emptyColor = _ref.emptyColor,
        yearSpacing = _ref.yearSpacing,
        yearLegendOffset = _ref.yearLegendOffset,
        daySpacing = _ref.daySpacing,
        dayBorderWidth = _ref.dayBorderWidth,
        dayBorderColor = _ref.dayBorderColor,
        monthBorderWidth = _ref.monthBorderWidth,
        monthBorderColor = _ref.monthBorderColor,
        monthLegendOffset = _ref.monthLegendOffset,
        theme = _ref.theme,
        isInteractive = _ref.isInteractive,
        tooltipFormat = _ref.tooltipFormat,
        onClick = _ref.onClick;

    var _computeCalendar = (0, _CalendarLayout2.default)({
        width: width,
        height: height,
        from: from,
        to: to,
        data: data,
        direction: direction,
        colorScale: colorScale,
        emptyColor: emptyColor,
        yearSpacing: yearSpacing,
        daySpacing: daySpacing
    }),
        years = _computeCalendar.years,
        months = _computeCalendar.months,
        days = _computeCalendar.days;

    return _react2.default.createElement(
        _Container2.default,
        { isInteractive: isInteractive, theme: theme },
        function (_ref2) {
            var showTooltip = _ref2.showTooltip,
                hideTooltip = _ref2.hideTooltip;
            return _react2.default.createElement(
                _SvgWrapper2.default,
                { width: outerWidth, height: outerHeight, margin: margin },
                days.map(function (d) {
                    return _react2.default.createElement(_CalendarDay2.default, {
                        key: d.date.toString(),
                        data: d,
                        x: d.x,
                        y: d.y,
                        size: d.size,
                        color: d.color,
                        borderWidth: dayBorderWidth,
                        borderColor: dayBorderColor,
                        showTooltip: showTooltip,
                        hideTooltip: hideTooltip,
                        tooltipFormat: tooltipFormat,
                        theme: theme,
                        onClick: onClick
                    });
                }),
                months.map(function (m) {
                    return _react2.default.createElement(_CalendarMonthPath2.default, {
                        key: m.date.toString(),
                        path: m.path,
                        borderWidth: monthBorderWidth,
                        borderColor: monthBorderColor
                    });
                }),
                months.map(function (month) {
                    var transform = void 0;
                    if (direction === _directions.DIRECTION_HORIZONTAL) {
                        transform = 'translate(' + (month.bbox.x + month.bbox.width / 2) + ',' + (month.bbox.y - monthLegendOffset) + ')';
                    } else {
                        transform = 'translate(' + (month.bbox.x - monthLegendOffset) + ',' + (month.bbox.y + month.bbox.height / 2) + ') rotate(-90)';
                    }

                    return _react2.default.createElement(
                        'text',
                        {
                            key: month.date.toString() + '.legend',
                            className: 'nivo_calendar_month_legend',
                            transform: transform,
                            textAnchor: 'middle'
                        },
                        monthLegendFormat(month.date)
                    );
                }),
                years.map(function (year) {
                    var transform = void 0;
                    if (direction === _directions.DIRECTION_HORIZONTAL) {
                        transform = 'translate(' + (year.bbox.x - yearLegendOffset) + ',' + (year.bbox.y + year.bbox.height / 2) + ') rotate(-90)';
                    } else {
                        transform = 'translate(' + (year.bbox.x + year.bbox.width / 2) + ',' + (year.bbox.y - yearLegendOffset) + ')';
                    }

                    return _react2.default.createElement(
                        'text',
                        {
                            key: year.year,
                            className: 'nivo_calendar_year_legend',
                            transform: transform,
                            textAnchor: 'middle'
                        },
                        year.year
                    );
                })
            );
        }
    );
};

Calendar.propTypes = _props.CalendarPropTypes;

exports.default = (0, _enhance2.default)(Calendar);