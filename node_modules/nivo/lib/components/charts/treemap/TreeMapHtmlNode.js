'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * This file is part of the nivo project.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE
                                                                                                                                                                                                                                                                   * file that was distributed with this source code.
                                                                                                                                                                                                                                                                   */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TreeMapHtmlNode = function TreeMapHtmlNode(_ref) {
    var node = _ref.node,
        style = _ref.style,
        handlers = _ref.handlers;

    if (style.width <= 0 || style.height <= 0) return null;

    var rotate = node.label && style.orientLabel && style.height > style.width;

    return _react2.default.createElement(
        'div',
        _extends({
            style: {
                boxSizing: 'border-box',
                position: 'absolute',
                top: style.y,
                left: style.x,
                width: style.width,
                height: style.height,
                background: style.color,
                overflow: 'hidden',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                borderWidth: style.borderWidth,
                borderStyle: 'solid',
                borderColor: style.borderColor
            }
        }, handlers),
        node.label !== false && _react2.default.createElement(
            'span',
            {
                style: {
                    color: style.labelTextColor,
                    transform: 'rotate(' + (rotate ? '-90' : '0') + 'deg)',
                    WebkitUserSelect: 'none',
                    MozUserSelect: 'none',
                    MsUserSelect: 'none',
                    userSelect: 'none'
                }
            },
            node.label
        )
    );
};

TreeMapHtmlNode.propTypes = {
    node: _propTypes2.default.object.isRequired,
    style: _propTypes2.default.shape({
        x: _propTypes2.default.number.isRequired,
        y: _propTypes2.default.number.isRequired,
        width: _propTypes2.default.number.isRequired,
        height: _propTypes2.default.number.isRequired,
        color: _propTypes2.default.string.isRequired,
        borderWidth: _propTypes2.default.number.isRequired,
        borderColor: _propTypes2.default.string.isRequired,
        labelTextColor: _propTypes2.default.string.isRequired,
        orientLabel: _propTypes2.default.bool.isRequired
    }).isRequired,
    handlers: _propTypes2.default.object.isRequired
};

exports.default = TreeMapHtmlNode;