'use strict';

exports.__esModule = true;

var _compose = require('recompose/compose');

var _compose2 = _interopRequireDefault(_compose);

var _defaultProps = require('recompose/defaultProps');

var _defaultProps2 = _interopRequireDefault(_defaultProps);

var _withState = require('recompose/withState');

var _withState2 = _interopRequireDefault(_withState);

var _withPropsOnChange = require('recompose/withPropsOnChange');

var _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _colors = require('../../../lib/colors');

var _propertiesConverters = require('../../../lib/propertiesConverters');

var _hocs = require('../../../hocs');

var _props = require('./props');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (Component) {
    return (0, _compose2.default)((0, _defaultProps2.default)(_props.SankeyDefaultProps), (0, _withState2.default)('currentNode', 'setCurrentNode', null), (0, _withState2.default)('currentLink', 'setCurrentLink', null), (0, _hocs.withColors)(), (0, _hocs.withColors)({
        colorByKey: 'linkColorBy',
        destKey: 'getLinkColor',
        defaultColorBy: 'source.id'
    }), (0, _hocs.withTheme)(), (0, _hocs.withDimensions)(), (0, _hocs.withMotion)(), (0, _withPropsOnChange2.default)(['nodeBorderColor'], function (_ref) {
        var nodeBorderColor = _ref.nodeBorderColor;
        return {
            getNodeBorderColor: (0, _colors.getInheritedColorGenerator)(nodeBorderColor)
        };
    }), (0, _withPropsOnChange2.default)(['labelTextColor'], function (_ref2) {
        var labelTextColor = _ref2.labelTextColor;
        return {
            getLabelTextColor: (0, _colors.getInheritedColorGenerator)(labelTextColor)
        };
    }), (0, _withPropsOnChange2.default)(['label', 'labelFormat'], function (_ref3) {
        var label = _ref3.label,
            labelFormat = _ref3.labelFormat;
        return {
            getLabel: (0, _propertiesConverters.getLabelGenerator)(label, labelFormat)
        };
    }), _pure2.default)(Component);
}; /*
    * This file is part of the nivo project.
    *
    * Copyright 2016-present, RaphaÃ«l Benitte.
    *
    * For the full copyright and license information, please view the LICENSE
    * file that was distributed with this source code.
    */