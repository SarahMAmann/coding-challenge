'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * This file is part of the nivo project.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE
                                                                                                                                                                                                                                                                   * file that was distributed with this source code.
                                                                                                                                                                                                                                                                   */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _d3Sankey = require('d3-sankey');

var _props = require('../../../props');

var _SmartMotion = require('../../SmartMotion');

var _SmartMotion2 = _interopRequireDefault(_SmartMotion);

var _SankeyLinksItem = require('./SankeyLinksItem');

var _SankeyLinksItem2 = _interopRequireDefault(_SankeyLinksItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getLinkPath = (0, _d3Sankey.sankeyLinkHorizontal)();

var SankeyLinks = function SankeyLinks(_ref) {
    var links = _ref.links,
        linkOpacity = _ref.linkOpacity,
        linkHoverOpacity = _ref.linkHoverOpacity,
        linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,
        linkContract = _ref.linkContract,
        animate = _ref.animate,
        motionDamping = _ref.motionDamping,
        motionStiffness = _ref.motionStiffness,
        showTooltip = _ref.showTooltip,
        hideTooltip = _ref.hideTooltip,
        setCurrentLink = _ref.setCurrentLink,
        currentNode = _ref.currentNode,
        currentLink = _ref.currentLink,
        isCurrentLink = _ref.isCurrentLink,
        onClick = _ref.onClick,
        tooltipFormat = _ref.tooltipFormat,
        tooltip = _ref.tooltip,
        theme = _ref.theme;

    var getOpacity = function getOpacity(link) {
        if (!currentNode && !currentLink) return linkOpacity;
        if (isCurrentLink(link)) return linkHoverOpacity;
        return linkHoverOthersOpacity;
    };

    if (animate !== true) {
        return _react2.default.createElement(
            'g',
            null,
            links.map(function (link) {
                return _react2.default.createElement(_SankeyLinksItem2.default, {
                    key: link.source.id + '.' + link.target.id,
                    link: link,
                    path: getLinkPath(link),
                    width: Math.max(1, link.width - linkContract * 2),
                    color: link.color,
                    opacity: getOpacity(link),
                    contract: linkContract,
                    showTooltip: showTooltip,
                    hideTooltip: hideTooltip,
                    setCurrent: setCurrentLink,
                    onClick: onClick,
                    tooltip: tooltip,
                    theme: theme,
                    tooltipFormat: tooltipFormat
                });
            })
        );
    }

    var springConfig = {
        stiffness: motionStiffness,
        damping: motionDamping
    };

    return _react2.default.createElement(
        'g',
        null,
        links.map(function (link) {
            return _react2.default.createElement(
                _SmartMotion2.default,
                {
                    key: link.source.id + '.' + link.target.id,
                    style: function style(spring) {
                        return {
                            path: spring(getLinkPath(link), springConfig),
                            width: spring(Math.max(1, link.width - linkContract * 2), springConfig),
                            color: spring(link.color, springConfig),
                            opacity: spring(getOpacity(link), springConfig),
                            contract: spring(linkContract, springConfig)
                        };
                    }
                },
                function (style) {
                    return _react2.default.createElement(_SankeyLinksItem2.default, _extends({
                        link: link
                    }, style, {
                        showTooltip: showTooltip,
                        hideTooltip: hideTooltip,
                        setCurrent: setCurrentLink,
                        onClick: onClick,
                        tooltip: tooltip,
                        theme: theme,
                        tooltipFormat: tooltipFormat
                    }));
                }
            );
        })
    );
};

SankeyLinks.propTypes = _extends({
    links: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        source: _propTypes2.default.shape({
            id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired
        }).isRequired,
        target: _propTypes2.default.shape({
            id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
            label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired
        }).isRequired,
        width: _propTypes2.default.number.isRequired,
        color: _propTypes2.default.string.isRequired
    })).isRequired,

    // links
    linkOpacity: _propTypes2.default.number.isRequired,
    linkHoverOpacity: _propTypes2.default.number.isRequired,
    linkHoverOthersOpacity: _propTypes2.default.number.isRequired,
    linkContract: _propTypes2.default.number.isRequired,

    theme: _propTypes2.default.object.isRequired,
    tooltip: _propTypes2.default.func

}, _props.motionPropTypes, {

    // interactivity
    showTooltip: _propTypes2.default.func.isRequired,
    hideTooltip: _propTypes2.default.func.isRequired,
    setCurrentLink: _propTypes2.default.func.isRequired,
    currentLink: _propTypes2.default.object,
    isCurrentLink: _propTypes2.default.func.isRequired,
    onClick: _propTypes2.default.func.isRequired
});

exports.default = (0, _pure2.default)(SankeyLinks);