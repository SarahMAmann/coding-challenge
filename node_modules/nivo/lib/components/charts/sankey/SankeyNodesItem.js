'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _compose = require('recompose/compose');

var _compose2 = _interopRequireDefault(_compose);

var _withState = require('recompose/withState');

var _withState2 = _interopRequireDefault(_withState);

var _withPropsOnChange = require('recompose/withPropsOnChange');

var _withPropsOnChange2 = _interopRequireDefault(_withPropsOnChange);

var _withHandlers = require('recompose/withHandlers');

var _withHandlers2 = _interopRequireDefault(_withHandlers);

var _pure = require('recompose/pure');

var _pure2 = _interopRequireDefault(_pure);

var _BasicTooltip = require('../../tooltip/BasicTooltip');

var _BasicTooltip2 = _interopRequireDefault(_BasicTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var SankeyNodesItem = function SankeyNodesItem(_ref) {
    var node = _ref.node,
        x = _ref.x,
        y = _ref.y,
        width = _ref.width,
        height = _ref.height,
        color = _ref.color,
        opacity = _ref.opacity,
        borderWidth = _ref.borderWidth,
        borderColor = _ref.borderColor,
        handleMouseEnter = _ref.handleMouseEnter,
        handleMouseMove = _ref.handleMouseMove,
        handleMouseLeave = _ref.handleMouseLeave,
        onClick = _ref.onClick;
    return _react2.default.createElement('rect', {
        x: x,
        y: y,
        width: width,
        height: height,
        fill: color,
        fillOpacity: opacity,
        strokeWidth: borderWidth,
        stroke: borderColor,
        strokeOpacity: opacity,
        onMouseEnter: handleMouseEnter,
        onMouseMove: handleMouseMove,
        onMouseLeave: handleMouseLeave,
        onClick: onClick
    });
};

SankeyNodesItem.propTypes = {
    node: _propTypes2.default.shape({
        id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
        label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
        color: _propTypes2.default.string.isRequired
    }),

    x: _propTypes2.default.number.isRequired,
    y: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired,
    height: _propTypes2.default.number.isRequired,

    color: _propTypes2.default.string.isRequired,
    opacity: _propTypes2.default.number.isRequired,
    borderWidth: _propTypes2.default.number.isRequired,
    borderColor: _propTypes2.default.string.isRequired,

    // interactivity
    showTooltip: _propTypes2.default.func.isRequired,
    hideTooltip: _propTypes2.default.func.isRequired,
    setCurrent: _propTypes2.default.func.isRequired,
    onClick: _propTypes2.default.func.isRequired,

    tooltip: _propTypes2.default.element.isRequired,
    theme: _propTypes2.default.object.isRequired
};

var enhance = (0, _compose2.default)((0, _withPropsOnChange2.default)(['node', 'theme', 'tooltip'], function (_ref2) {
    var node = _ref2.node,
        theme = _ref2.theme,
        tooltip = _ref2.tooltip;

    if (tooltip) {
        return {
            tooltip: _react2.default.createElement(_BasicTooltip2.default, { id: tooltip(node), enableChip: false, theme: theme })
        };
    }
    return {
        tooltip: _react2.default.createElement(_BasicTooltip2.default, { id: node.label, enableChip: true, color: node.color, theme: theme })
    };
}), (0, _withPropsOnChange2.default)(['onClick', 'node'], function (_ref3) {
    var _onClick = _ref3.onClick,
        node = _ref3.node;
    return {
        onClick: function onClick(event) {
            return _onClick(node, event);
        }
    };
}), (0, _withHandlers2.default)({
    handleMouseEnter: function handleMouseEnter(_ref4) {
        var showTooltip = _ref4.showTooltip,
            setCurrent = _ref4.setCurrent,
            node = _ref4.node,
            tooltip = _ref4.tooltip;
        return function (e) {
            setCurrent(node);
            showTooltip(tooltip, e);
        };
    },
    handleMouseMove: function handleMouseMove(_ref5) {
        var showTooltip = _ref5.showTooltip,
            tooltip = _ref5.tooltip;
        return function (e) {
            showTooltip(tooltip, e);
        };
    },
    handleMouseLeave: function handleMouseLeave(_ref6) {
        var hideTooltip = _ref6.hideTooltip,
            setCurrent = _ref6.setCurrent;
        return function () {
            setCurrent(null);
            hideTooltip();
        };
    }
}), _pure2.default);

exports.default = enhance(SankeyNodesItem);