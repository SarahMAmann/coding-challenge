'use strict';

exports.__esModule = true;

var _uniq2 = require('lodash/uniq');

var _uniq3 = _interopRequireDefault(_uniq2);

var _cloneDeep2 = require('lodash/cloneDeep');

var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*
                                                                                                                                                                                                                                                                   * This file is part of the nivo project.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * Copyright 2016-present, RaphaÃ«l Benitte.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * For the full copyright and license information, please view the LICENSE
                                                                                                                                                                                                                                                                   * file that was distributed with this source code.
                                                                                                                                                                                                                                                                   */


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d3Sankey = require('d3-sankey');

var _props = require('../../../props');

var _SvgWrapper = require('../SvgWrapper');

var _SvgWrapper2 = _interopRequireDefault(_SvgWrapper);

var _SankeyNodes = require('./SankeyNodes');

var _SankeyNodes2 = _interopRequireDefault(_SankeyNodes);

var _SankeyLinks = require('./SankeyLinks');

var _SankeyLinks2 = _interopRequireDefault(_SankeyLinks);

var _SankeyLabels = require('./SankeyLabels');

var _SankeyLabels2 = _interopRequireDefault(_SankeyLabels);

var _Container = require('../Container');

var _Container2 = _interopRequireDefault(_Container);

var _props2 = require('./props');

var _enhance = require('./enhance');

var _enhance2 = _interopRequireDefault(_enhance);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getId = function getId(d) {
    return d.id;
};

var Sankey = function Sankey(_ref) {
    var _data = _ref.data,
        align = _ref.align,
        margin = _ref.margin,
        width = _ref.width,
        height = _ref.height,
        outerWidth = _ref.outerWidth,
        outerHeight = _ref.outerHeight,
        nodeOpacity = _ref.nodeOpacity,
        nodeHoverOpacity = _ref.nodeHoverOpacity,
        nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,
        nodeWidth = _ref.nodeWidth,
        nodePaddingX = _ref.nodePaddingX,
        nodePaddingY = _ref.nodePaddingY,
        nodeBorderWidth = _ref.nodeBorderWidth,
        getNodeBorderColor = _ref.getNodeBorderColor,
        setCurrentNode = _ref.setCurrentNode,
        currentNode = _ref.currentNode,
        linkOpacity = _ref.linkOpacity,
        linkHoverOpacity = _ref.linkHoverOpacity,
        linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,
        linkContract = _ref.linkContract,
        getLinkColor = _ref.getLinkColor,
        setCurrentLink = _ref.setCurrentLink,
        currentLink = _ref.currentLink,
        enableLabels = _ref.enableLabels,
        getLabel = _ref.getLabel,
        labelPosition = _ref.labelPosition,
        labelPadding = _ref.labelPadding,
        labelOrientation = _ref.labelOrientation,
        getLabelTextColor = _ref.getLabelTextColor,
        theme = _ref.theme,
        getColor = _ref.getColor,
        nodeTooltip = _ref.nodeTooltip,
        linkTooltip = _ref.linkTooltip,
        animate = _ref.animate,
        motionDamping = _ref.motionDamping,
        motionStiffness = _ref.motionStiffness,
        isInteractive = _ref.isInteractive,
        onClick = _ref.onClick,
        tooltipFormat = _ref.tooltipFormat;

    var sankey = (0, _d3Sankey.sankey)().nodeAlign((0, _props.sankeyAlignmentFromProp)(align)).nodeWidth(nodeWidth).nodePadding(nodePaddingY).size([width, height]).nodeId(getId);

    // deep clone is required as the sankey diagram mutates data
    var data = (0, _cloneDeep3.default)(_data);
    sankey(data);

    data.nodes.forEach(function (node) {
        node.color = getColor(node);
        node.label = getLabel(node);
        node.x = node.x0 + nodePaddingX;
        node.y = node.y0;
        node.width = Math.max(node.x1 - node.x0 - nodePaddingX * 2, 0);
        node.height = Math.max(node.y1 - node.y0, 0);
    });

    data.links.forEach(function (link) {
        link.color = getLinkColor(link);
    });

    var motionProps = {
        animate: animate,
        motionDamping: motionDamping,
        motionStiffness: motionStiffness
    };

    var isCurrentNode = function isCurrentNode() {
        return false;
    };
    var isCurrentLink = function isCurrentLink() {
        return false;
    };

    if (currentLink) {
        isCurrentNode = function isCurrentNode(_ref2) {
            var id = _ref2.id;
            return id === currentLink.source.id || id === currentLink.target.id;
        };
        isCurrentLink = function isCurrentLink(_ref3) {
            var source = _ref3.source,
                target = _ref3.target;
            return source.id === currentLink.source.id && target.id === currentLink.target.id;
        };
    }

    if (currentNode) {
        var currentNodeIds = [currentNode.id];
        data.links.filter(function (_ref4) {
            var source = _ref4.source,
                target = _ref4.target;
            return source.id === currentNode.id || target.id === currentNode.id;
        }).forEach(function (_ref5) {
            var source = _ref5.source,
                target = _ref5.target;

            currentNodeIds.push(source.id);
            currentNodeIds.push(target.id);
        });

        currentNodeIds = (0, _uniq3.default)(currentNodeIds);
        isCurrentNode = function isCurrentNode(_ref6) {
            var id = _ref6.id;
            return currentNodeIds.includes(id);
        };
        isCurrentLink = function isCurrentLink(_ref7) {
            var source = _ref7.source,
                target = _ref7.target;
            return source.id === currentNode.id || target.id === currentNode.id;
        };
    }

    return _react2.default.createElement(
        _Container2.default,
        { isInteractive: isInteractive, theme: theme },
        function (_ref8) {
            var showTooltip = _ref8.showTooltip,
                hideTooltip = _ref8.hideTooltip;
            return _react2.default.createElement(
                _SvgWrapper2.default,
                { width: outerWidth, height: outerHeight, margin: margin },
                _react2.default.createElement(_SankeyLinks2.default, _extends({
                    links: data.links,
                    linkContract: linkContract,
                    linkOpacity: linkOpacity,
                    linkHoverOpacity: linkHoverOpacity,
                    linkHoverOthersOpacity: linkHoverOthersOpacity,
                    showTooltip: showTooltip,
                    hideTooltip: hideTooltip,
                    setCurrentLink: setCurrentLink,
                    currentNode: currentNode,
                    currentLink: currentLink,
                    isCurrentLink: isCurrentLink,
                    onClick: onClick,
                    tooltip: linkTooltip,
                    theme: theme,
                    tooltipFormat: tooltipFormat
                }, motionProps)),
                _react2.default.createElement(_SankeyNodes2.default, _extends({
                    nodes: data.nodes,
                    nodePaddingX: nodePaddingX,
                    nodeOpacity: nodeOpacity,
                    nodeHoverOpacity: nodeHoverOpacity,
                    nodeHoverOthersOpacity: nodeHoverOthersOpacity,
                    nodeBorderWidth: nodeBorderWidth,
                    getNodeBorderColor: getNodeBorderColor,
                    showTooltip: showTooltip,
                    hideTooltip: hideTooltip,
                    setCurrentNode: setCurrentNode,
                    currentNode: currentNode,
                    currentLink: currentLink,
                    isCurrentNode: isCurrentNode,
                    onClick: onClick,
                    tooltip: nodeTooltip,
                    theme: theme,
                    tooltipFormat: tooltipFormat
                }, motionProps)),
                enableLabels && _react2.default.createElement(_SankeyLabels2.default, _extends({
                    nodes: data.nodes,
                    width: width,
                    labelPosition: labelPosition,
                    labelPadding: labelPadding,
                    labelOrientation: labelOrientation,
                    getLabelTextColor: getLabelTextColor,
                    theme: theme
                }, motionProps))
            );
        }
    );
};

Sankey.propTypes = _props2.SankeyPropTypes;

exports.default = (0, _enhance2.default)(Sankey);